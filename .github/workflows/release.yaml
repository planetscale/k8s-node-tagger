name: create release assets
on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - doc/**
      - examples/**
      - .github/**
      - renovate.json5
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: login to ghcr.io
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Calculate new version with autotag
        id: autotag
        run: |
          curl -sL https://git.io/autotag-install | sh -s -- -b "${RUNNER_TEMP}/bin"
          set -x
          version=$(${RUNNER_TEMP}/bin/autotag -n)
          echo "version=${version}" >> $GITHUB_ENV
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3
        with:
          cache-binary: false

      - name: Build and push
        uses: docker/build-push-action@b32b51a8eda65d6793cd0494a773d4f6bcef32dc # v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/planetscale/k8s-node-tagger:v${{ steps.autotag.outputs.version }}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${version}" \
            --target main \
            --title "v${version}" \
            --generate-notes